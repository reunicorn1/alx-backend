{
  "name": "0x03-queuing_system_in_js",
  "version": "1.0.0",
  "description": "Redis is often used in conjunction with JavaScript for job scheduling and queue management. It's a powerful in-memory data structure store that can be used as a database, cache, and message broker. In the context of job scheduling, you might use Redis to store jobs that need to be processed at a later time. Each job would be added to a queue, and a separate worker process would periodically check the queue and process jobs as they come in. There are several libraries available that can help with this, such as Bull or Kue. These libraries provide a higher-level API for managing job queues with Redis, including features like priority, job events, concurrency control, and more.",
  "main": "index.js",
  "scripts": {
    "lint": "./node_modules/.bin/eslint",
    "check-lint": "lint [0-9]*.js",
    "test": "./node_modules/.bin/mocha --require @babel/register --exit",
    "dev": "nodemon --exec babel-node --presets @babel/preset-env"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "chai-http": "^4.3.0",
    "express": "^4.18.2",
    "kue": "^0.11.1",
    "redis": "^4.7.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.22.5",
    "@babel/core": "^7.22.5",
    "@babel/node": "^7.22.5",
    "@babel/preset-env": "^7.22.5",
    "@babel/register": "^7.22.5",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "chai": "^4.3.7",
    "eslint": "^8.45.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jest": "^27.2.1",
    "mocha": "^10.2.0",
    "nodemon": "^3.0.1",
    "request": "^2.88.2",
    "sinon": "^15.0.0"
  }
}
